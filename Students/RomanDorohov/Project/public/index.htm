<!DOCTYPE html>
<html lang="EN"
<head>
    <meta charset="UTF-8"
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>   
</head>
<body>
    <div id="app">
        <div>
            <button @click="showCalc = !showCalc">Hide</button>
        <div v-show="showCalc">
            <h1>{{ helloString }}</h1>
            <input type="text" v-model.lazy="a"> a<br>
            <input type="text" v-model.lazy="b"> b
            <h1>a+b = {{ result }}</h1>
            <h1>{{ 2 + 2 }}</h1>
        </div>
        <div id="catalog">
            <button @click="showCatalog = !showCayalog">{{ computedCatalogBtnCaption }}</button>
            <div v-show="showCatalog" id="catalog" class="container">"
                <div class="catalog-item" v-for="item of items">
                    <img :src="item.productImg" alt="" width="70">
                    <strong>{{ item.productName }}</strong>
                    <p>$ {{ item.productPrice }}</p>
                    <button>Buy</button>
                </div>


            </div>

        </div>
        </div>
        
    </div>
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script>
        // class Vue {}

        const app = new Vue({
            el: '#app',
            data: {
                helloString: 'Hello Vue',
                a: 0,
                b: 0,
                showCalc: false,
                showCatalog: true,
                catalogUrl: 'https://raw.githubusercontent.com/kellolo/static/master/JSON/catalog.json',
                items: [],
                basketItems: []


            },
            computed: {
                twoPlusTwo() {
                    console.log('computed');
                    return 2 + 2

                },
                result() {
                    return +this.a + +this.b
                },
                computedCatalogBtnCaption() {
                    return this.showCatalog ? 'Hide' : 'Show'
                }
            },
            methods: {
                get(url) {
                    return fetch(url).then(d => d.json())
                },
                buy(item) {
                    this.basketItems.push(Object.assign({}, item, {amount: 1});
                    console.log(this.basketItems)

                }
            },

            mounted() {
                this.get(this.catalogUrl)
                .then(items => {
                    this.items = items;
                    console.log(this.items);
                })
            },

        });
    </script>
</body>
</html>
